#include<stdio.h>
#include<stdlib.h>
#include<windows.h>
#include<time.h>
#include<conio.h>

typedef struct axycoord {
    int ax;
    int ay;
    int af;
}ac;
ac* ptr;
int frameSIZE = 20;
int x = 12, y = 7;
int end_flag = 0;
int hit = 0;

void erase();
void gotoxy(int x, int y);
void write();
void set_place_Frame();
void set_start_point();
int edge_check_x(int a);
int edge_check_y(int a);
void move_A();
void gen_ran_num(int count_a);
void eat(ac* ptr, int count_$);

void main() {

    int count_$;
    printf("  $의 수 입력 : "); scanf_s("%d", &count_$); system("cls");
    set_place_Frame();
    gen_ran_num(count_$);
    set_start_point();

    while (1) {

        move_A();

        eat(ptr, count_$);

        if (end_flag == 1) {
            break;
        }

    }

    gotoxy(0, 20);

    free(ptr);

}

void erase() {
    printf(" \b");
}

void gotoxy(int x, int y) {
    COORD pos = { x,y };
    SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), pos);
}

void write() {

    printf("A\b");
    //gotoxy(0, 22); printf("x= %d y= %d", x, y);
}

void set_place_Frame() {
    int l = 0;
    gotoxy(0, 0);
    //맨윗줄 22문자 입력
    printf("\u250F");
    for (l = 0; l < frameSIZE; l++) {
        printf("\u2501");
    }
    printf("\u2513\n");
    //중간
    for (l = 0; l < 15; l++) {
        printf("\u2503                    \u2503 \n");
 
    }
    //맨아랫줄
    printf("\u2517");
    for (l = 0; l < frameSIZE; l++) {
        printf("\u2501");

    }
    printf("\u251B\n");
}

void set_start_point() {

    gotoxy(12,7);
    write();

}

int edge_check_x(int a) {

    if (a < 2) {
        return 2;
    }
    else if (a > 21) {
        return 21;
    }
    else {
        return a;
    }
}

int edge_check_y(int a) {

    if (a < 1) {
        return 1;
    }
    else if (a > 15) {
        return 15;
    }
    else {
        return a;
    }
}

void move_A() {

    char input = _getch();

    switch (input) {

    case 75://left
        erase();
        x = edge_check_x(x - 1);
        gotoxy(x, y);
        write();
        break;

    case 77://right
        erase();
        x = edge_check_x(x + 1);
        gotoxy(x, y);
        write();
        break;

    case 72://up
        erase();
        y = edge_check_y(y - 1);
        gotoxy(x, y);
        write();
        break;

    case 80://down
        erase();
        y = edge_check_y(y + 1);
        gotoxy(x, y);
        write();
        break;

    case 27://ESC
        end_flag = 1;
        break;

    default:
        break;
    }
}

void gen_ran_num(int count_a) {
    
    int ax, ay;
    int i;

    srand((unsigned int)time(NULL));

    ptr = (ac*)malloc(count_a * sizeof(ac));

    for (i = 0; i < count_a; i++) {
        
        while (1) {
            ax = rand() % 20 + 2;
            ay = rand() % 15 + 1;
            if ((ax != 12) && (ay != 2)) {
                break;
            }
        }
        (ptr+i)->ax = ax;
        (ptr+i)->ay = ay;
        (ptr+i)->af = 0;

        gotoxy(ax, ay); printf("$");
    }
}

void eat(ac* ptr, int count_$) {
    //gotoxy(0, 18);printf("count = %d\n", count_$);
    int i;
    
    for (i = 0; i < count_$; i++) {

        if ( (ptr + i)->ax == x && (ptr + i)->ay == y && (ptr + i)->af == 0){
            (ptr + i)->af = 1;
            hit++; 
            
            //gotoxy(24, 2);printf("$ = %d\n", hit);
        }

    }

    if (hit == count_$) {

        end_flag = 1;
    }

}